// <auto-generated />
using auction.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace auction.Migrations
{
    [DbContext(typeof(AuctionContext))]
    partial class AuctionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("auction.Models.Auction", b =>
                {
                    b.Property<int>("auctionid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at");

                    b.Property<int>("productid");

                    b.Property<DateTime>("updated_at");

                    b.Property<int>("userid");

                    b.HasKey("auctionid");

                    b.HasIndex("productid");

                    b.HasIndex("userid");

                    b.ToTable("auctions");
                });

            modelBuilder.Entity("auction.Models.Product", b =>
                {
                    b.Property<int>("productid")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("bid");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("description");

                    b.Property<DateTime>("end_date");

                    b.Property<string>("name");

                    b.Property<int>("sellerid");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("productid");

                    b.HasIndex("sellerid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("auction.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at");

                    b.Property<string>("first_name");

                    b.Property<string>("last_name");

                    b.Property<string>("password");

                    b.Property<DateTime>("updated_at");

                    b.Property<string>("username");

                    b.Property<decimal>("wallet");

                    b.HasKey("userid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("auction.Models.Auction", b =>
                {
                    b.HasOne("auction.Models.Product", "product")
                        .WithMany("auctions")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("auction.Models.User", "user")
                        .WithMany("players")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("auction.Models.Product", b =>
                {
                    b.HasOne("auction.Models.User", "seller")
                        .WithMany("products")
                        .HasForeignKey("sellerid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
